/**
 * Static definitions of all cache events
 */
export class CacheEvents {
    static forward(source, emitter) {
        CacheEvents.ALL.forEach(e => {
            source.on(e, (...args) => emitter.emit(e, ...args));
        });
    }
}
/**
 * (key, value)
 */
CacheEvents.EXPIRE = "expire";
/**
 * (stat, incAmount, prevAmount)
 */
CacheEvents.STAT = "stat";
/**
 * (error)
 */
CacheEvents.ERROR = "error";
CacheEvents.ALL = [CacheEvents.EXPIRE, CacheEvents.STAT, CacheEvents.ERROR];
//# sourceMappingURL=CacheEvents.js.map