import { EventEmitter } from "events";
import { CacheEvents } from "./CacheEvents";
/**
 * Static definitions of all cache stats
 */
export class CacheStats extends EventEmitter {
    constructor() {
        super(...arguments);
        this.map = new Map();
    }
    inc(key, amount = 1) {
        if (amount === 0)
            return;
        const prev = this.get(key);
        this.map.set(key, prev + amount);
        try {
            this.emit(CacheEvents.STAT, key, amount, prev);
        }
        catch (e) {
            console.error(e);
        }
    }
    get(key) {
        return this.map.get(key) || 0;
    }
    reset() {
        this.map.clear();
    }
    toString() {
        return JSON.stringify(this.map, null, 2);
    }
}
CacheStats.HIT = "hit";
CacheStats.MISS = "miss";
CacheStats.LOAD_SUCCESS = "load_success";
CacheStats.LOAD_FAIL = "load_failure";
CacheStats.EXPIRE = "expire";
CacheStats.ALL = [CacheStats.HIT, CacheStats.MISS, CacheStats.LOAD_SUCCESS, CacheStats.LOAD_FAIL, CacheStats.EXPIRE];
//# sourceMappingURL=CacheStats.js.map